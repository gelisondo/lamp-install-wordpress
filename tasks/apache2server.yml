---
# tasks file for apache2-role
- name: Install apache2
  apt: pkg={{ item }} state=present
  with_items: "{{ apache2.packages.ubuntu.focal }}"
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_release == "focal"

- name: Install apache2 on Debian BullSeye - BookWorm
  apt: pkg={{ item }} state=present
  with_items: "{{ apache2.packages.debian.bullseye_bookworm }}"
  when: (ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_release'] == "bulseye") or
        (ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_release'] == "bookworm")

- name: Asegurarse de que apache2 esté corriendo y habilitado al inicio.
  service: name=apache2 state=started enabled=yes

- name: Descargamos y Descomprimimos la ultima version de wordpress para crear la raiz.
  ansible.builtin.unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: /tmp
    remote_src: yes
    group: "{{ app_user }}"
    owner: "{{ app_user }}"
  
- name: Copy WordPress latest Version to new Site
  ansible.builtin.copy:
    src: /tmp/wordpress/  # note the '/' <-- la barra al final es para copiar solo el contenido ;) !!!
    dest: "/var/www/{{ item.value.http_host }}"
    directory_mode:
    remote_src: yes
    force: no # Si el sitio ya existe, no sobre escribe los archivos - !! hevita borrar sitios operativos.
  loop: "{{ sites_config_install|dict2items }}"


- name: Change the owner an permisions
  ansible.builtin.file:
    dest: "/var/www/{{ item.value.http_host }}"
    state: directory
    recurse: true
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    #Set directories to 755 and files to 644
    mode: u=rwX,g=rX,o=rX
  loop: "{{ sites_config_install|dict2items }}"


# - name: Check and comment WP_DEBUG in wp-config.php if exists
#   ansible.builtin.lineinfile:
#     path: "/var/www/{{ item.value.http_host }}/wp-config.php"
#     regexp: "define\\( 'WP_DEBUG', false \\);"
#     line: "/* define( 'WP_DEBUG', false ); */"
#   loop: "{{ sites_config_install|dict2items }}"

- name: Crete directory for nu-plugins
  ansible.builtin.file:
    path: "/var/www/{{ item.value.http_host }}/wp-content/mu-plugins"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: u=rwX,g=rwX,o=rwX
  when: item.value.bihind_proxy == true
  loop: "{{ sites_config_install|dict2items }}"

- name: Template for mu-plugins verify http and https
  template:
    src: force-https-urls.php.j2
    dest: "/var/www/{{ item.value.http_host }}/wp-content/mu-plugins/force-https-urls.php"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: u=rwX,g=rwX,o=rwX
  when: item.value.bihind_proxy == true
  loop: "{{ sites_config_install|dict2items }}"

- name: Agregamos Código php para configurar wordpres detras de un reverse proxy
  ansible.builtin.blockinfile:
    insertafter: "<?php"
    path: "/var/www/{{ item.value.http_host }}/wp-config.php"
    marker: "// {mark} Added by Ansible"
    block: |

      define('WP_HOME','https://{{ item.value.http_fqdn }}');
      define('WP_SITEURL','https://{{ item.value.http_fqdn }}');

      if (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
              $_SERVER['HTTPS'] = 'on';
              $_SERVER['SERVER_PORT'] = 443;
              $_SERVER['REQUEST_SCHEME'] = 'https';
      }
  when: item.value.bihind_proxy == true
  loop: "{{ sites_config_install|dict2items }}"


# Esta sección si sobre escribe el contenido, pero si las variables no cambian no hay problema que los sitios se rompan.
- name: Update Wordpress config file with value wp_mysql_db
  ansible.builtin.lineinfile:
    path: "/var/www/{{ item.value.http_host }}/wp-config.php"
    regexp: "define\\( 'DB_NAME', '(.)+' \\);"
    line: "define( 'DB_NAME', '{{ item.value.wp_mysql_db }}' );"
  loop: "{{ sites_config_install|dict2items }}"

- name: Update Wordpress config file with value wp_mysql_user_install_install_install_install
  ansible.builtin.lineinfile:
    path: "/var/www/{{ item.value.http_host }}/wp-config.php"
    regexp: "define\\( 'DB_USER', '(.)+' \\);"
    line: "define( 'DB_USER', '{{ item.value.wp_mysql_user }}' );"
  loop: "{{ sites_config_install|dict2items }}"

- name: Update Wordpress config file with value wp_mysql_password
  ansible.builtin.lineinfile:
    path: "/var/www/{{ item.value.http_host }}/wp-config.php"
    regexp: "define\\( 'DB_PASSWORD', '(.)+' \\);"
    line: "define( 'DB_PASSWORD', '{{ item.value.wp_mysql_password }}' );"
  loop: "{{ sites_config_install|dict2items }}"


- name: Agregamos VirtualHost
  #Agrega los virtual Host Necesarios bansandoce en el template template/apache.conf.j2 y lo deja en /etc/apache2/site-available/default
  template:
    src=apache.conf.j2
    dest="/etc/apache2/sites-available/{{ item.value.http_conf }}"
    owner=root
    mode=0644
  loop: "{{ sites_config_install|dict2items }}"

- name: Habilitamos el nuevo sitio
  ansible.builtin.shell:
    cmd: "/usr/sbin/a2ensite {{ item.value.http_conf }}"
  loop: "{{ sites_config_install|dict2items }}"

- name: Deshabilitamos el sitio default
  ansible.builtin.shell:
    cmd: "/usr/sbin/a2dissite 000-default.conf"
  
  notify:
    - restart apache2

  tags: inst-apache
